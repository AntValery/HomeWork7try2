"""
Задание 4.
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно —
первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""

class Matrix:
    lst = []

    def __init__(self, *lst):
        self.lst = list(lst)

    def __str__(self):
        s = ""
        for i in self.lst:
            for j in i:
                s = s + str(j) + " "
            s = s + "\n"
        return s

    def __add__(self, lst1):
        result = list()

        for i in range(len(self.lst)):
            tmp = []
            for j in range(len(self.lst[i])):
                tmp.append(self.lst[i][j] + lst1[i][j])
            result.append(tmp)

        return result

l0 = [1,2,3,4,5]
l1 = [1,2,3,4,5]
l2 = [1,2,3,4,5]
l3 = [1,2,3,4,5]

t0 = [1,2,3,4,5]
t1 = [1,2,3,4,5]
t2 = [1,2,3,4,5]
t3 = [1,2,3,4,5]

m = Matrix(l0,l1,l2,l3)
m1 = Matrix(t0,t1,t2,t3)
print(m)
print(m+m1)